#!/bin/bash
# My Telegram : https://t.me/hokagevpnpremium
# ==========================================
# Color
RED='\033[0;31m'
NC='\033[0m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
LIGHT='\033[0;37m'
# ==========================================

# Function to display progress spinner
spinner() {
    local pid=$1
    local delay=0.1
    local spinstr='|/-\'
    while ps -p $pid > /dev/null; do
        local temp=${spinstr#?}
        printf " [%c]  " "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
}

# Getting bot info
# Pastikan file ini ada dan berisi informasi yang benar
if [ ! -f "/usr/bin/idchat" ] || [ ! -f "/usr/bin/token" ]; then
    echo -e "${RED}File idchat atau token tidak ditemukan. Harap periksa kembali.${NC}"
    exit 1
fi
CHATID=$(cat /usr/bin/idchat)
KEY=$(cat /usr/bin/token)
export TIME="10"
export URL="https://api.telegram.org/bot$KEY/sendMessage"

# Cek dependensi jq
if ! command -v jq &> /dev/null; then
    echo -e "${ORANGE}jq tidak ditemukan. Menginstall jq...${NC}"
    apt-get update > /dev/null 2>&1
    apt-get install -y jq > /dev/null 2>&1
fi

clear
echo -e "${GREEN}Mempersiapkan proses backup...${NC}"
IP=$(curl -sS ipv4.icanhazip.com)
domain=$(cat /etc/xray/domain 2>/dev/null || echo "Tidak ada domain")
date=$(date +"%Y-%m-%d")
timestamp=$(date +"%Y%m%d_%H%M%S")
LOCATION=$(curl -s ipinfo.io | jq -r '.city + ", " + .country')

# Backup directory and file
BACKUP_DIR="/root/backup_${timestamp}"
BACKUP_FILE_NAME="backup_${IP}_${timestamp}.zip"
BACKUP_FILE_PATH="/root/${BACKUP_FILE_NAME}"

# Create backup directory
echo -e "${BLUE}Membuat direktori backup sementara...${NC}"
mkdir -p "$BACKUP_DIR" || {
    echo -e "${RED}Gagal membuat direktori backup${NC}"
    exit 1
}

# --- PERBAIKAN UTAMA DIMULAI DI SINI ---

# Daftar file dan direktori yang akan di-backup
files_to_backup=("/etc/passwd" "/etc/group" "/etc/shadow" "/etc/gshadow" "/etc/crontab")
dirs_to_backup=("/etc/vless" "/etc/vmess" "/etc/trojan" "/var/lib/kyt" "/etc/xray" "/var/www/html")

echo -e "${BLUE}Menyalin file sistem...${NC}"
for file in "${files_to_backup[@]}"; do
    if [ -f "$file" ]; then
        cp -p "$file" "$BACKUP_DIR/"
    fi
done

echo -e "${BLUE}Menyalin data pengguna dan konfigurasi...${NC}"
for dir in "${dirs_to_backup[@]}"; do
    if [ -d "$dir" ]; then
        echo -e "${GREEN} -> Folder ditemukan: $dir ${NC}"
        cp -r "$dir" "$BACKUP_DIR/"
    else
        echo -e "${ORANGE} -> Folder dilewati (tidak ada): $dir ${NC}"
    fi
done

# --- PERBAIKAN UTAMA SELESAI ---

# Create ZIP archive
echo -e "${BLUE}Membuat file ZIP backup...${NC}"
cd "$BACKUP_DIR" || exit 1
(zip -r "$BACKUP_FILE_PATH" . > /dev/null 2>&1) &
pid=$!
spinner $pid
wait $pid
if [ $? -ne 0 ]; then
    echo -e "${RED}Gagal membuat file ZIP backup${NC}"
    rm -rf "$BACKUP_DIR"
    exit 1
else
    echo -e "${GREEN}File ZIP backup berhasil dibuat: $BACKUP_FILE_NAME${NC}"
fi

# Upload to Google Drive
if command -v rclone &> /dev/null; then
    echo -e "${BLUE}Mengupload backup ke Google Drive...${NC}"
    (rclone copy "$BACKUP_FILE_PATH" dr:backup/ > /dev/null 2>&1) &
    pid=$!
    spinner $pid
    wait $pid
    if [ $? -ne 0 ]; then
        echo -e "${RED}Gagal mengupload backup ke Google Drive${NC}"
        link="Tidak tersedia"
    else
        echo -e "${GREEN}Upload ke Google Drive berhasil${NC}"
        echo -e "${BLUE}Mendapatkan link download...${NC}"
        link=$(rclone link dr:backup/"$BACKUP_FILE_NAME" 2>/dev/null)
        if [[ -z "$link" || ! "$link" =~ "id=" ]]; then
            echo -e "${RED}Gagal mendapatkan link Google Drive${NC}"
            link="Tidak tersedia"
        fi
    fi
    echo -e "${GREEN}Link backup: $link${NC}"
else
    echo -e "${ORANGE}rclone tidak terinstall, melewati upload ke Google Drive.${NC}"
    link="Tidak tersedia"
fi

# Send Telegram notification message
echo -e "${BLUE}Mengirim notifikasi teks ke Telegram...${NC}"
TEXT="
<b>🚨 Backup Notification 🚨</b>
━━━━━━━━━━━━━━━━━━
<i>Detail server Anda telah berhasil di-backup.</i>

🖥️ <b>VPS Info</b>
┣ <b>IP Address:</b> <code>${IP}</code>
┣ <b>Domain:</b> <code>${domain}</code>
┗ <b>Lokasi:</b> <code>${LOCATION}</code>

💾 <b>Backup Details</b>
┣ <b>Nama File:</b> <code>${BACKUP_FILE_NAME}</code>
┣ <b>Waktu:</b> <code>$(date '+%d %B %Y, %H:%M:%S') WIB</code>
┗ <b>Status:</b> ✅ Berhasil

📎 <b>Download Link</b>
<a href=\"${link}\">Klik Disini Untuk Download</a>
"
curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" "$URL" >/dev/null

if [ $? -eq 0 ]; then
    echo -e "${GREEN}Notifikasi teks berhasil terkirim${NC}"
else
    echo -e "${RED}Gagal mengirim notifikasi teks${NC}"
fi

# Send backup file to Telegram
echo -e "${BLUE}Mengirim file backup ke Telegram...${NC}"
(curl --max-time 180 -F "chat_id=${CHATID}" \
     -F "document=@${BACKUP_FILE_PATH}" \
     -F "caption=File backup: ${BACKUP_FILE_NAME}" \
     https://api.telegram.org/bot${KEY}/sendDocument > /dev/null 2>&1) &
pid=$!
spinner $pid
wait $pid
if [ $? -eq 0 ]; then
    echo -e "${GREEN}File backup berhasil dikirim ke Telegram.${NC}"
else
    echo -e "${RED}Gagal mengirim file backup ke Telegram (Mungkin ukuran file > 50MB).${NC}"
fi

# Clean up
echo -e "${BLUE}Membersihkan file dan direktori sementara...${NC}"
rm -f "$BACKUP_FILE_PATH"
rm -rf "$BACKUP_DIR"

echo "Proses backup selesai."
